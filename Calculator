import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;
public class Main implements ActionListener{
 JButton numberButton[];
 JButton functionButton[];
 JButton decButton;
 JButton negButton;
 JButton addButton;
 JButton subButton;
 JButton divButton;
 JButton delButton;
 JButton mulButton;
 JButton equButton;
 JButton clrButton;
 JTextField textfield;
 //static //void addActionListener(ActionListener.JButton[]);
 //functionButton[].addActionListener(this);
 //public void actionPerformed(ActionEvent e);
 public static void main(String[] args) {
 // TODO Auto-generated method stub
 
new Main();
 }
 
public Main() {
 JFrame frame = new JFrame();
 
JTextField textfield;
 JButton[] numberButton = new JButton[10];
 JButton[] functionButton = new JButton[9];
 JButton addButton, subButton, mulButton, divButton;
 JButton decButton, equButton, delButton, clrButton, negButton;
 JPanel panel;
 //ImageIcon image;
 
//private static ActionListener;
 Font myFont = new Font("Ink Free",Font.BOLD,30);
 

double num1=0, num2=0,result=0;
 char operator;
 
//frame.setSize(420,450);
 frame.setTitle("Calculator");
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 ImageIcon image = new ImageIcon("calc.png");
 frame.setIconImage(image.getImage());
 frame.getContentPane().setBackground(Color.pink);
 frame.getContentPane().setLayout(null);
 frame.setLayout(null);
 //frame.add(ActionListener.this);
 
textfield = new JTextField();
 textfield.setBounds(50, 25,300, 50);
 textfield.setFont(myFont);
 textfield.setEditable(true);
 textfield.setBackground(Color.CYAN);
 

addButton = new JButton("+");
 subButton = new JButton("-");
 mulButton = new JButton("*");
 divButton = new JButton("/");
 decButton = new JButton(".");
 equButton = new JButton("=");
 delButton = new JButton("Delete");
 clrButton = new JButton("Clear");
 negButton = new JButton("(-)");
 
negButton.setBounds(50,430,100,50);
 delButton.setBounds(150,430,100,50);
 clrButton.setBounds(250,430,100,50);
 
functionButton[0] = addButton;
 functionButton[1] = subButton;
 functionButton[2] = mulButton;
 functionButton[3] = divButton;
 functionButton[4] = decButton;
 functionButton[5] = equButton;
 functionButton[6] = delButton;
 functionButton[7] = clrButton;
 



for(int i = 0; i < 8; i++) {
 functionButton[i] = new JButton(String.valueOf(i));
 functionButton[i].addActionListener(this);
 functionButton[i].setFont(myFont);
 functionButton[i].setFocusable(false);
 
}
 for(int j = 0; j < 10; j++) {
 numberButton[j] = new JButton(String.valueOf(j));
 numberButton[j].addActionListener(this);
 numberButton[j].setFont(myFont);
 numberButton[j].setFocusable(false);
 }
 
/*negButton.setBounds(50,430,100,50);
 delButton.setBounds(150,430,100,50);
 clrButton.setBounds(250,430,100,50);*/
 
panel = new JPanel();
 panel.setBounds(50, 100, 300, 300);
 panel.setLayout(new GridLayout(4,4,10,10));
 //panel.setBackground(Color.GRAY);
 panel.add(numberButton[1]);
 panel.add(numberButton[2]);
 panel.add(numberButton[3]);
 panel.add(addButton);
 
panel.add(numberButton[4]);
 panel.add(numberButton[5]);
 panel.add(numberButton[6]);
 panel.add(subButton);
 
panel.add(numberButton[7]);
 panel.add(numberButton[8]);
 panel.add(numberButton[9]);
 panel.add(mulButton);
 
panel.add(decButton);
 panel.add(numberButton[0]);
 panel.add(equButton);
 panel.add(divButton);
 
frame.getContentPane().add(panel);
 frame.getContentPane().add(negButton);
 frame.getContentPane().add(delButton);
 frame.getContentPane().add(clrButton);
 
frame.getContentPane().add(textfield);
 //frame.pack();
 frame.setResizable(false);
 frame.setSize(420,520);
 frame.setVisible(true);
 

}
 @Override
 public void actionPerformed(ActionEvent e) {
 // TODO Auto-generated method stub
 
ActionListener(this);
 for(int j = 0; j < 9; j++) {
 if(e.getSource()==numberButton[j]) { 
textfield.setText(textfield.getText().concat(String.valueOf(j)));
 }
 }
 if(e.getSource()==decButton) {
 textfield.setText(textfield.getText().concat("."));
 }
 if(e.getSource()==addButton) {
 textfield.setText(textfield.getText().concat("."));
 }
 if(e.getSource()==addButton) {
 double num1 = Double.parseDouble(textfield.getText());
 char operator = '+';
 textfield.setText("");
 }
 if(e.getSource()==subButton) {
 double num1 = Double.parseDouble(textfield.getText());
 char operator = '-';
 textfield.setText("");
 }
 if(e.getSource()==mulButton) {
 double num1 = Double.parseDouble(textfield.getText());
 char operator = '*';
 textfield.setText("");
 }
 if(e.getSource()==divButton) {
 double num1 = Double.parseDouble(textfield.getText());
 char operator = '/';
 textfield.setText("");
 }
 if(e.getSource()==equButton){ 
double num2 = Double.parseDouble(textfield.getText());
 
int operator = 0;
 Object result = null;
 double num1 = 0;
 switch(operator) {
 case'+':
 result = num1 + num2;
 break;
 case'-':
 result = num1 - num2;
 break;
 case'*':
 result = num1 * num2;
 break;
 case'/':
 result = num1 / num2;
 break;
 }
 textfield.setText(String.valueOf(result));
 num1 = (double) result;
 }
 if(e.getSource()==clrButton) {
 textfield.setText("");
 }
 if(e.getSource()==delButton) {
 String string = textfield.getText();
 textfield.setText("");
 for(int i = 0; i < string.length()-1; i++) {
 textfield.setText(textfield.getText()+string.charAt(i));
 }
 if(e.getSource()==negButton) {
 double temp = Double.parseDouble(textfield.getText());
 temp *= -1;
 textfield.setText(String.valueOf(temp));
 }
 }
 }
 private void ActionListener(Main main) {
 // TODO Auto-generated method stub
 
}
} 
